/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/AWTForms/Frame.java to edit this template
 */
package proyecto1;

import java.awt.Frame;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import static java.lang.Thread.sleep;
import java.util.ArrayList;
import java.util.Random;
import java.util.concurrent.Semaphore;

/**
 *
 * @author alepd
 */
public class Generador extends java.awt.Frame {

    /**
     * Creates new form Frame
     */
    public Generador() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws InterruptedException {
        Frame frame = new Frame();
        final int alto = 700, ancho = 1400;
        frame.setLocation(0,0);
        frame.setSize(ancho, alto);
        frame.setVisible(true);
        CanvasCafeteria canvas = new CanvasCafeteria(ancho, alto);
        frame.add(canvas);
        Semaphore salaCafe = new Semaphore(3);
        Semaphore salaLeche = new Semaphore(3);
        Semaphore dosisCafe = new Semaphore(10);    
        Semaphore dosisLeche = new Semaphore(10);
        Semaphore papelera = new Semaphore(1);

        Camarero camarero = new Camarero(dosisLeche, dosisCafe, canvas);
        camarero.start();

        ArrayList<Thread> listaHilos = new ArrayList<>();
        int numHilos = 30;

        for (int i = 0; i < numHilos; i++) {
            Random random = new Random(System.currentTimeMillis());

            if (random.nextInt(2) % 2 == 0) {
                Cortado cortado = new Cortado(salaCafe, salaLeche, dosisCafe, dosisLeche, papelera, canvas);
                cortado.start();
                listaHilos.add(cortado);

            } else {
                Manchado manchado = new Manchado(salaCafe, salaLeche, dosisCafe, dosisLeche, papelera, canvas);
                Thread manchadoThread = new Thread(manchado);
                manchadoThread.start();
                listaHilos.add(manchadoThread);
            }

            sleep(500);
        }

        for (int i = 0; i < numHilos; i++) {
            try {
                listaHilos.get(i).join();
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
        
        camarero.setSeguir(false);
        camarero.join();

        sleep(2000);

        System.exit(0);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
